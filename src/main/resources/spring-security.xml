<b:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:b="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 定义不需要权限的文件访问 -->
	<http pattern="/login" security="none" />
	<http pattern="/denide.jsp" security="none" />

	<http auto-config="false"
	   entry-point-ref="loginUrlAuthenticationEntryPoint">
	       <!-- 所有地址全开，无需验证，测试用 -->
       <!--  <intercept-url pattern="/**" access="permitAll" /> -->
	    <csrf disabled="true"/>
		<logout delete-cookies="JSESSIONID" />
		<!-- <custom-filter ref="csrfFilter" before="CSRF_FILTER"/> -->
		<custom-filter ref="usernamePasswordAuthenticationFilter" before="FORM_LOGIN_FILTER"/>
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR" />
	</http>
	<!-- 自定义SPRING SECURITY过滤链 -->
	<b:bean id="authenticationManager"
		class="org.springframework.security.authentication.ProviderManager">
		<b:constructor-arg>
			<b:list>
				<b:ref bean="daoAuthenticationProvider" />
			</b:list>
		</b:constructor-arg>
	</b:bean>
	<!-- 认证提供 -->
	<b:bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<b:property name="userDetailsService" ref="userDetailsService"></b:property>
		<b:property name="passwordEncoder" ref="bcryptEncoder"></b:property>
	</b:bean>

	<!-- 用户信息提供 -->
	<b:bean id="userDetailsService"
		class="com.mix.springsecurity.authorization.SecUserDetailsService"></b:bean>
	<!-- 加密算法 -->
	<b:bean name="bcryptEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</b:bean>
	<!-- org.springframework.security.web.access.intercept.FilterSecurityInterceptor-->
	<b:bean id="filterSecurityInterceptor"
		class="com.mix.springsecurity.authorization.SecSecurityInterceptor">
		<b:property name="securityMetadataSource" ref="securityMetadataSource" />
		<b:property name="accessDecisionManager" ref="accessDecisionManager" />
		<b:property name="authenticationManager" ref="authenticationManager" />
	</b:bean>
	<b:bean id="usernamePasswordAuthenticationFilter"
		class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
		<b:property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<b:property name="usernameParameter" value="username"/>
		<b:property name="passwordParameter" value="password"/>
		<b:property name="authenticationManager" ref="authenticationManager"></b:property>
		<b:property name="authenticationSuccessHandler">
			<b:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationSuccessHandler">
				<b:property name="defaultTargetUrl" value="/index.jsp"></b:property>
			</b:bean>
		</b:property>
		<b:property name="authenticationFailureHandler">
			<b:bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
				<b:property name="defaultFailureUrl" value="/denide.jsp"></b:property>
			</b:bean>
		</b:property>
	</b:bean>
	<!-- 资源角色关系初始化 -->
	<b:bean id="securityMetadataSource"
		class="com.mix.springsecurity.authorization.SecFilterInvocationSecurityMetadataSource">
		<b:constructor-arg name="secUserService" ref="secUserService" />
	</b:bean>
	<!-- 验证用户是否有某个资源的访问权限 -->
	<b:bean id="accessDecisionManager"
		class="com.mix.springsecurity.authorization.SecAccessDecisionManager" />
	<!-- -->
	<b:bean id="secUserService"
		class="com.mix.springsecurity.service.impl.SecUserServiceImpl"></b:bean>
	<!-- 未登录的切入点 -->
	<b:bean id="loginUrlAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"> 
		<b:constructor-arg value="/login" /> 
	</b:bean>
</b:beans>